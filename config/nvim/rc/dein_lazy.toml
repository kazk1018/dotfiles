[[plugins]]
repo = 'Shougo/vimproc.vim'
build = 'make'
on_source = ['denite.nvim']

[[plugins]]
repo = 'Shougo/echodoc.vim'
on_event = 'CompleteDone'
hook_source = '''
  " call echodoc#enable()
'''

[[plugins]]
repo = 'Shougo/deol.nvim'
on_cmd = 'Deol'
on_source = 'denite.nvim'

[[plugins]]
repo = 'Shougo/neomru.vim'

[[plugins]]
repo = 'Shougo/neoyank.vim'
on_if = 1
on_event = 'TextYankPost'
on_source = ['unite.vim', 'denite.nvim']

[[plugins]]
repo = 'Shougo/unite.vim'
depends = 'neomru.vim'

[[plugins]]
repo = 'Shougo/denite.nvim'
on_cmd = 'Denite'
depends = 'neomru.vim'
hook_source = 'source $XDG_CONFIG_HOME/nvim/rc/plugins/denite.rc.vim'
hook_add = '''
  nnoremap <silent> ;u :<C-u>Denite -buffer-name=search%`bufnr('%')`
        \ line<CR>
  nnoremap <silent> ;y
        \ :<C-u>Denite -buffer-name=register
        \ register neoyank<CR>
  xnoremap <silent> ;y
        \ :<C-u>Denite -default-action=replace -buffer-name=register
        \ register neoyank<CR>
  nnoremap <silent> ;f :<C-u>Denite file/point file/old
        \ -sorters=sorter_rank
        \ `finddir('.git', ';') != '' ? 'file/rec/git' : 'file/rec'`<CR>
  nnoremap <silent> ;rf :<C-u>Denite file/mru<CR>
  nnoremap <silent> ;* :<C-u>DeniteCursorWord -buffer-name=search
        \ -auto-action line<CR>
  nnoremap <silent> ;g :<C-u>Denite -buffer-name=search
        \ -no-empty grep<CR>
  nnoremap <silent> ;cg :<C-u>DeniteCursor -buffer-name=search
        \ -no-empty grep<CR>
  nnoremap <silent> ;; :<C-u>Denite -default-action=ex command command_history<CR>
'''

[[plugins]]
repo = 'Shougo/defx.nvim'
on_if = "isdirectory(bufname('%'))"
hook_add = 'nnoremap <silent> <Leader>f :Defx -split=vertical -winwidth=50 -direction=topleft<CR>'
hook_source = '''
  autocmd MyAutoCmd FileType defx call s:defx_my_settings()
  function! s:defx_my_settings() abort "{{{
    nnoremap <silent><buffer><expr> o
    \ defx#do_action('drop')
    nnoremap <silent><buffer><expr> c
    \ defx#do_action('copy')
    nnoremap <silent><buffer><expr> m
    \ defx#do_action('move')
    nnoremap <silent><buffer><expr> p
    \ defx#do_action('paste')
    nnoremap <silent><buffer><expr> l
    \ defx#do_action('open')
    nnoremap <silent><buffer><expr> E
    \ defx#do_action('open', 'vsplit')
    nnoremap <silent><buffer><expr> P
    \ defx#do_action('open', 'pedit')
    nnoremap <silent><buffer><expr> K
    \ defx#do_action('new_directory')
    nnoremap <silent><buffer><expr> N
    \ defx#do_action('new_file')
    nnoremap <silent><buffer><expr> d
    \ defx#do_action('remove')
    nnoremap <silent><buffer><expr> r
    \ defx#do_action('rename')
    nnoremap <silent><buffer><expr> !
    \ defx#do_action('execute_command')
    nnoremap <silent><buffer><expr> x
    \ defx#do_action('execute_system')
    nnoremap <silent><buffer><expr> yy
    \ defx#do_action('yank_path')
    nnoremap <silent><buffer><expr> .
    \ defx#do_action('toggle_ignored_files')
    nnoremap <silent><buffer><expr> ;
    \ defx#do_action('repeat')
    nnoremap <silent><buffer><expr> h
    \ defx#do_action('cd', ['..'])
    nnoremap <silent><buffer><expr> ~
    \ defx#do_action('cd')
    nnoremap <silent><buffer><expr> q
    \ defx#do_action('quit')
    nnoremap <silent><buffer><expr> <Space>
    \ defx#do_action('toggle_select') . 'j'
    nnoremap <silent><buffer><expr> *
    \ defx#do_action('toggle_select_all')
    nnoremap <silent><buffer><expr> j
    \ line('.') == line('$') ? 'gg' : 'j'
    nnoremap <silent><buffer><expr> k
    \ line('.') == 1 ? 'G' : 'k'
    nnoremap <silent><buffer><expr> <C-l>
    \ defx#do_action('redraw')
    nnoremap <silent><buffer><expr> <C-g>
    \ defx#do_action('print')
    nnoremap <silent><buffer><expr> cd
    \ defx#do_action('change_vim_cwd')
  endfunction"}}}

'''

# [[plugins]]
# repo = 'Shougo/vimfiler.vim'
# depends = 'unite.vim'
# on_map = {n = '<Plug>'}
# on_if = "isdirectory(bufname('%'))"
# hook_add = 'nnoremap <silent> <Leader>f :<C-u>VimFiler -invisible<CR>'
# hook_source = '''
#   call vimfiler#custom#profile('default', 'context', {
#         \ 'safe' : 0,
#         \ 'auto_expand' : 1,
#         \ 'parent' : 0,
#         \ })
#   let g:vimfiler_as_default_explorer = 1
# 
#   " Like Textmate icons.
#   let g:vimfiler_tree_leaf_icon = ' '
#   let g:vimfiler_tree_opened_icon = '▾'
#   let g:vimfiler_tree_closed_icon = '▸'
#   let g:vimfiler_file_icon = ' '
#   let g:vimfiler_readonly_file_icon = '✗'
#   let g:vimfiler_marked_file_icon = '✓'
# 
#   autocmd MyAutoCmd FileType vimfiler call s:vimfiler_my_settings()
#   function! s:vimfiler_my_settings() abort "{{{
#     nmap <buffer> <Tab> <Plug>(vimfiler_switch_to_other_window)
#   endfunction"}}}
# '''

[[plugins]]
repo = 'fatih/vim-go'
on_ft = 'go'

[[plugins]]
repo = 'rust-lang/rust.vim'
on_ft = 'rust'
hook_source = '''
  let g:rustfmt_autosave = 1
'''

[[plugins]]
repo = 'Shougo/neco-vim'
on_ft = 'vim'

[[plugins]]
repo = 'zchee/deoplete-go'
on_ft = 'go'
hook_source = '''
  let g:deoplete#sources#go#gocode_binary = expand('$GOPATH/bin/gocode')
'''

[[plugins]]
repo = 'zchee/deoplete-jedi'
on_ft = 'python'

[[plugins]]
repo = 'racer-rust/vim-racer'
on_ft = 'rust'

[[plugins]]
repo = 'rhysd/vim-operator-surround'
depends = 'vim-operator-user'
on_map = {n = '<Plug>'}
hook_add = '''
  nmap <silent>sa <Plug>(operator-surround-append)a
  nmap <silent>sd <Plug>(operator-surround-delete)a
  nmap <silent>sr <Plug>(operator-surround-replace)a
  nmap <silent>sc <Plug>(operator-surround-replace)a
'''

[[plugins]]
repo = 'Shougo/deoplete.nvim'
if = 'has("python3")'
on_event = 'InsertEnter'
hook_source = '''
  let g:deoplete#enable_at_startup = 1
  source $XDG_CONFIG_HOME/nvim/rc/plugins/deoplete.rc.vim
'''
